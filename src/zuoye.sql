CREATE DATABASE zuoye;
USE zuoye;


CREATE TABLE college(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	createTime DATE NOT NULL ,
	status VARCHAR(200) NULL ,
);

CREATE TABLE major(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(36) NOT NULL ,
	createTime DATE NOT NULL ,
	status VARCHAR(200) NULL ,
	collegeId VARCHAR(36) NOT NULL,
	CONSTRAINT major_collegeId FOREIGN KEY(collegeId) REFERENCES college(id) ON UPDATE CASCADE
);

CREATE TABLE team(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(30) NOT NULL ,
	status VARCHAR(200) NULL ,
	majorId VARCHAR(36) NOT NULL ,
	CONSTRAINT team_majorId FOREIGN KEY(majorId) REFERENCES major(id) ON UPDATE CASCADE
);

CREATE TABLE role(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL ,
	status VARCHAR(200) NOT NULL 
);

CREATE TABLE course(
	id VARCHAR(36) PRIMARY KEY,
	majorId VARCHAR(36) NOT NULL ,
	name VARCHAR(20) NOT NULL ,
	credit FLOAT NOT NULL ,
	ctype VARCHAR(20) NOT NULL ,
	ctype2 VARCHAR(20) NOT NULL ,
	CONSTRAINT course_majorId FOREIGN KEY(majorId) REFERENCES major(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE teacher(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL ,
	password VARCHAR(20) NOT NULL ,
	sex VARCHAR(4) NOT NULL	,
	age INT	NOT NULL ,
	telephone VARCHAR(11) NULL ,
	position VARCHAR(20) NULL ,
	collegeId VARCHAR(36) NOT NULL ,
	roleId VARCHAR(36) NOT NULL ,
	CONSTRAINT teacher_collegeId FOREIGN KEY(collegeId) REFERENCES college(id) ON UPDATE CASCADE,
	CONSTRAINT teacher_roleId FOREIGN KEY(roleId) REFERENCES role(id) ON UPDATE CASCADE
);

CREATE TABLE student(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL,
	password VARCHAR(20) NOT NULL ,
	sex VARCHAR(4) NOT NULL ,
	age INT NOT NULL ,
	telephone VARCHAR(11) NULL ,
	position VARCHAR(20) NULL ,
	teamId VARCHAR(36) NOT NULL ,
	roleId VARCHAR(36) NOT NULL ,
	CONSTRAINT student_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON UPDATE CASCADE,
	CONSTRAINT student_roleId FOREIGN KEY(roleId) REFERENCES role(id) ON UPDATE CASCADE
);

CREATE TABLE grade(
	studentId VARCHAR(36) NOT NULL,
	courseId VARCHAR(36) NOT NULL,
	score INT NOT NULL ,
	PRIMARY KEY(studentId,courseId),
	CONSTRAINT grade_studentId FOREIGN KEY(studentId) REFERENCES student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT grade_courseId FOREIGN KEY(courseId) REFERENCES course(id) ON DELETE CASCADE
);

CREATE TABLE team_course(
	teamId VARCHAR(36) NOT NULL ,
	teacherId VARCHAR(36) NOT NULL,
	courseId VARCHAR(36) NOT NULL ,
	week VARCHAR(10) NOT NULL ,
	start INT NOT NULL ,
	lengths INT NOT NULL ,
	hour INT NOT NULL ,
	PRIMARY KEY(teamId,teacherId,courseId),
	CONSTRAINT tc_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON DELETE CASCADE ,
	CONSTRAINT tc_teacherId FOREIGN KEY(teacherId) REFERENCES teacher(id) ON UPDATE CASCADE,
	CONSTRAINT tc_courseId FOREIGN KEY(courseId) REFERENCES course(id)  ON DELETE CASCADE
);

CREATE TABLE myfunction(
	id VARCHAR(36) PRIMARY KEY,
	teacherId VARCHAR(36) NOT NULL ,
	courseId VARCHAR(36) NOT NULL ,
	teamId VARCHAR(36) NOT NULL,
	task FLOAT NOT NULL ,
	pacific FLOAT NOT NULL ,
	mid FLOAT NOT NULL ,
	final FLOAT NOT NULL ,
	CONSTRAINT function_teacherId FOREIGN KEY(teacherId) REFERENCES teacher(id) ON DELETE CASCADE ,
	CONSTRAINT function_courseId FOREIGN KEY(courseId) REFERENCES course(id) ON DELETE CASCADE,
	CONSTRAINT function_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON DELETE CASCADE
);

CREATE TABLE admin(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL ,
	password VARCHAR(20) NOT NULL 
);
