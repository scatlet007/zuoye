CREATE DATABASE zuoye;
USE zuoye;

CREATE TABLE college(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL COMMENT "学院",
	createTime DATE NOT NULL COMMENT "",
	status VARCHAR(200) NULL COMMENT "简单描述"
)COMMENT="1、学院表";
CREATE TABLE major(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(36) NOT NULL COMMENT "专业",
	createTime DATE NOT NULL COMMENT "",
	status VARCHAR(200) NULL COMMENT "描述",
	collegeId VARCHAR(36) NOT NULL COMMENT "学院表外键",
	CONSTRAINT major_collegeId FOREIGN KEY(collegeId) REFERENCES college(id) ON UPDATE CASCADE
)COMMENT="2、专业表";
CREATE TABLE team(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(30) NOT NULL COMMENT "班级",
	status VARCHAR(200) NULL COMMENT "描述",
	majorId VARCHAR(36) NOT NULL COMMENT "专业外键",
	CONSTRAINT team_majorId FOREIGN KEY(majorId) REFERENCES major(id) ON UPDATE CASCADE
)COMMENT="3、班级表";
CREATE TABLE role(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL COMMENT "角色",
	status VARCHAR(200) NOT NULL COMMENT "简单描述"
)COMMENT="4、角色表";
CREATE TABLE course(
	id VARCHAR(36) PRIMARY KEY,
	majorId VARCHAR(36) NOT NULL COMMENT "专业ID",
	name VARCHAR(20) NOT NULL COMMENT "课程",
	credit FLOAT NOT NULL COMMENT "学分",
	ctype VARCHAR(20) NOT NULL COMMENT "课程分类",
	ctype2 VARCHAR(20) NOT NULL COMMENT "考核方式",
	CONSTRAINT course_majorId FOREIGN KEY(majorId) REFERENCES major(id) ON DELETE CASCADE ON UPDATE CASCADE
)COMMENT="5、科目表";
CREATE TABLE teacher(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL COMMENT "教师",
	password VARCHAR(20) NOT NULL COMMENT "密码",
	sex VARCHAR(4) NOT NULL	COMMENT "性别",
	age INT	NOT NULL COMMENT "年龄",
	telephone VARCHAR(11) NULL COMMENT "手机号码",
	position VARCHAR(20) NULL COMMENT "职位",
	collegeId VARCHAR(36) NOT NULL COMMENT "学院外键",
	roleId VARCHAR(36) NOT NULL COMMENT "角色表外键",
	CONSTRAINT teacher_collegeId FOREIGN KEY(collegeId) REFERENCES college(id) ON UPDATE CASCADE,
	CONSTRAINT teacher_roleId FOREIGN KEY(roleId) REFERENCES role(id) ON UPDATE CASCADE
)COMMENT="6、教师表";
CREATE TABLE student(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL COMMENT "学生",
	password VARCHAR(20) NOT NULL COMMENT "密码",
	sex VARCHAR(4) NOT NULL COMMENT "性别",
	age INT NOT NULL COMMENT "年龄",
	telephone VARCHAR(11) NULL COMMENT "手机号码",
	position VARCHAR(20) NULL COMMENT "职位",
	teamId VARCHAR(36) NOT NULL COMMENT "班级外键",
	roleId VARCHAR(36) NOT NULL COMMENT "角色外键",
	CONSTRAINT student_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON UPDATE CASCADE,
	CONSTRAINT student_roleId FOREIGN KEY(roleId) REFERENCES role(id) ON UPDATE CASCADE
)COMMENT="7、学生表";
CREATE TABLE grade(
	studentId VARCHAR(36) NOT NULL COMMENT "学生ID",
	courseId VARCHAR(36) NOT NULL COMMENT "学院ID",
	score INT NOT NULL COMMENT "成绩",
	PRIMARY KEY(studentId,courseId),
	CONSTRAINT grade_studentId FOREIGN KEY(studentId) REFERENCES student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT grade_courseId FOREIGN KEY(courseId) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE
)COMMENT="8、成绩表";
CREATE TABLE team_course(
	teamId VARCHAR(36) NOT NULL COMMENT "班级外键",
	teacherId VARCHAR(36) NOT NULL COMMENT "教师外键",
	courseId VARCHAR(36) NOT NULL COMMENT "课程外键",
	week VARCHAR(10) NOT NULL COMMENT "星期",
	start INT NOT NULL COMMENT "课开始",
	lengths INT NOT NULL COMMENT "长度",
	hour INT NOT NULL COMMENT "课时",
	PRIMARY KEY(teamId,teacherId,courseId),
	CONSTRAINT tc_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT tc_teacherId FOREIGN KEY(teacherId) REFERENCES teacher(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT tc_courseId FOREIGN KEY(courseId) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE
)COMMENT="9、班级科目关联表";
CREATE TABLE function(
	id VARCHAR(36) PRIMARY KEY,
	teacherId VARCHAR(36) NOT NULL COMMENT "教师外键",
	courseId VARCHAR(36) NOT NULL COMMENT "课程外键",
	teamId VARCHAR(36) NOT NULL COMMENT "班级外键",
	task FLOAT NOT NULL COMMENT "作业比分",
	pacific FLOAT NOT NULL COMMENT "平时比分",
	mid FLOAT NOT NULL COMMENT "期中考试",
	final FLOAT NOT NULL COMMENT "期末考试",
	CONSTRAINT function_teacherId FOREIGN KEY(teacherId) REFERENCES teacher(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT function_courseId FOREIGN KEY(courseId) REFERENCES course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT function_teamId FOREIGN KEY(teamId) REFERENCES team(id) ON DELETE CASCADE ON UPDATE CASCADE
)COMMENT="10、函数表";
CREATE TABLE admin(
	id VARCHAR(36) PRIMARY KEY,
	name VARCHAR(20) NOT NULL COMMENT "管理员名",
	password VARCHAR(20) NOT NULL COMMENT "密码"
)COMMENT="11、管理员表";
